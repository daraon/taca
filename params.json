{
  "name": "Taca",
  "tagline": "Data management and analysis support code for R",
  "body": "_Taca, an Irish word meaning support._\r\n\r\n# Handling Data in R.\r\n[R](https://www.r-project.org/) is an extremely useful tool for data analytics. However its powerfulness can also be its undoing. Its command-line approach can mean that seemingly small tasks can take a long time to complete. This automatic page generator is the easiest way to create beautiful pages for all of your projects. The `taca` project is a draft package for R that will help simplify some common tasks within the R software environment.\r\n\r\n***\r\n\r\n# R Command Line Command Guide (for Linux Terminal Users)\r\n## Session Management\r\n* Open R from Command Line: `R`\r\n* Quit R: `q()`\r\n* Terminate R (only do if you have no alternative ways of ending the session): `ctrl+z`\r\n\r\n## Package Management\r\n* Get list of packages already installed: `.packages(TRUE)`\r\n* Get detailed info on packages already installed: `installed.packages()`\r\n* List all functions in a package: `ls(\"package:nameOfPackage\")`\r\n* Update packages: `update.packages()`\r\n* Uninstall package: `remove.packages(nameOfPackage)`\r\n\r\n## Workspace Management\r\n* Reload a saved workspace: `load(filePath)`\r\n* List workspace content: `ls()`\r\n* Save workspace: `save.image(filePath, compress=TRUE)`\r\n* Save part of workspace: `save(listOfObjectNamesToSave, filePath)`\r\n* Clear workspace: `rm(list=ls())`\r\n    or to use regular expressions to remove a subset of objects with related names: `rm(list=ls(pattern=\"RegularExpression\"))`\r\n* Clear workspace, but keep specific object: `rm(list=setdiff(ls(), \"objectToKeep\"))`\r\n    or to use regular expressions to keep a subset of objects with related names: `rm(list=setdiff(ls(), ls(pattern=\"RegularExpression\")))`\r\n\r\n## Command Writing/Running\r\n* Autocomplete or get a list of autocomplete options: `tab`\r\n* Interrupt a running command: `ctrl+c`\r\n* Get help on a function: `?functionName`\r\n* Leave a help page: `q`\r\n* Read and run a script file direct from disk: `source(filePath)`\r\n* Measure time taken to run code: `system.time(codeToRun)`\r\n* Save console output to disk: `sink(filePath)`\r\n* top saving console output to disk: `sink(file=NULL)`\r\n\r\n## Sundry Topics\r\n* Add colour to R command line interface when running Linux, open R and run the following lines\r\n`download.file(\"http://www.lepem.ufc.br/jaa/vimr/colorout_1.1-0.tar.gz\", destfile = \"colorout_1.0-3.tar.gz\")\r\ninstall.packages(\"colorout_1.0-3.tar.gz\", type = \"source\", repos = NULL)\r\nlibrary(\"colorout\")`\r\n    Note: there is no need to install the package when using the analytic server as it will be pre-installed. You will need to load it at the beginning of a session however.\r\n\r\n* Change the width of your console (print more on screen simultaneously): `options(width=120)`\r\n* Set all numbers to decimalised: `options(scipen=999)`\r\n* Convert scientific number to decimalised: `format(2.2e-16, scientific=FALSE)`\r\n\r\n***\r\n\r\n# Authors and Contributors\r\nDara O'Neill (@daraon) has authored the `taca` package and the contents of this page.\r\n\r\n# Help\r\nFor help on installing the package, check out [Karl Broman's helpful guide](https://stat.ethz.ch/R-manual/R-devel/library/utils/html/install.packages.html).\r\nFurther documentation on the package will be generated in due course.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}